<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.oneblood=0;
stime="";
global.chaoshi=1;
//url="http://time.tianqi.com";
//request=http_get(url);
alarm[0]=1;
day="";
month="";
year="";
r_str="";;
daynum=0;monthnum=0;yearnum=0;
daybetween=0;
getSucceed=1;
instance_create(960,540,obj_challenge_loading);
draw_set_font(font_heitida);
draw_set_color(c_white);
draw_set_halign(fa_middle);
draw_set_valign(fa_center);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    background_index[0]=bgd_challenge_open_02;
    l=instance_create(488,508,obj_challenge_level);
    with(l){levelnumber=2;}
    instance_create(296,795,obj_challenge_text);
    instance_create(121,501,obj_challenge_levelchange);
    b=instance_create(855,501,obj_challenge_levelchange);
    with(b){image_angle=180;}
    instance_create(927,874,obj_challenge_eventchange);
    instance_create(1428,530,obj_challenge_bar);
    notice=instance_create(1198,981,obj_challenge_get);
    with(notice){sprite_index=spr_challenge_notice_02;image_index=global.language-1;image_speed=0;}
    name=instance_create(486,106,obj_challenge_get);
    with(name){sprite_index=spr_challenge_name_02;image_index=global.language-1;image_speed=0;}
    reward1=instance_create(1128,756,obj_challenge_reward);
    reward2=instance_create(1128,519,obj_challenge_reward);
    with(reward1){sprite_index=spr_challenge_reward_coin;count=150;}
    with(reward2){sprite_index=spr_challenge_reward_coin;count=150;}
    reward3=instance_create(1128,284,obj_challenge_reward);
    with(reward3){sprite_index=spr_challenge_reward_tro;image_index=1;}
    minireward1=instance_create(1256,874,obj_challenge_reward);
    with(minireward1){sprite_index=spr_challenge_reward_pho;image_index=6;image_xscale=0.5;image_yscale=0.5;}
    minireward2=instance_create(1256,757,obj_challenge_reward);
    with(minireward2){sprite_index=spr_challenge_reward_pho;image_index=7;image_xscale=0.5;image_yscale=0.5;}
    minireward3=instance_create(1256,640,obj_challenge_reward);
    with(minireward3){sprite_index=spr_challenge_reward_pho;image_index=8;image_xscale=0.5;image_yscale=0.5;}
    minireward4=instance_create(1256,520,obj_challenge_reward);
    with(minireward4){sprite_index=spr_challenge_reward_pho;image_index=9;image_xscale=0.5;image_yscale=0.5;}
    minireward5=instance_create(1256,404,obj_challenge_reward);
    with(minireward5){sprite_index=spr_challenge_reward_pho;image_index=10;image_xscale=0.5;image_yscale=0.5;}
    minireward6=instance_create(1256,283,obj_challenge_reward);
    with(minireward6){sprite_index=spr_challenge_reward_pho;image_index=11;image_xscale=0.5;image_yscale=0.5;}
    medal1=instance_create(1750,100,obj_challenge_medal);
    with(medal1){sprite_index=spr_challenge_reward_pho;position=1;}
    medal2=instance_create(1750,275,obj_challenge_medal);
    with(medal2){sprite_index=spr_challenge_reward_pho;position=2;}
    medal3=instance_create(1750,450,obj_challenge_medal);
    with(medal3){sprite_index=spr_challenge_reward_pho;position=3;}
    medal4=instance_create(1750,625,obj_challenge_medal);
    with(medal4){sprite_index=spr_challenge_reward_pho;position=4;}
    medal5=instance_create(1750,800,obj_challenge_medal);
    with(medal5){sprite_index=spr_challenge_reward_pho;position=5;}
    medal6=instance_create(1750,975,obj_challenge_medal);
    with(medal6){sprite_index=spr_challenge_reward_pho;position=6;}
    switch(global.hellchallenge) {
        case 5:
            obj_challenge_level.levelnumber=2;
            obj_challenge_text.eventnumber=4;
            break;
        case 6:
            obj_challenge_level.levelnumber=2;
            obj_challenge_text.eventnumber=5;
            break;
        case 7:
            obj_challenge_level.levelnumber=3;
            obj_challenge_text.eventnumber=6;
            break;
        case 8:
            obj_challenge_level.levelnumber=3;
            obj_challenge_text.eventnumber=7;
            break;
    }
with(obj_challenge_loading){instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>r_str="null";
if ds_map_find_value(async_load,"id")==request {
    if ds_map_find_value(async_load,"status")==0 {
        r_str=ds_map_find_value(async_load,"result");
        var pos=string_pos('&lt;p id="times"&gt;',r_str);
        var pos2=string_pos(" GMT&lt;/p&gt;",r_str);
        if (pos&gt;0 and pos2&gt;pos){
            var headlen=string_length('&lt;p id="times"&gt;');
            stime=string_copy(r_str,pos+headlen+5,pos2-pos-headlen-5); 
            day=string_copy(stime,1,2);
            month=string_copy(stime,4,3);
            year=string_copy(stime,8,4);
            daynum=real(day);
            yearnum=real(year);
            switch(month){
                case "Jan":
                    monthnum=1;
                    break;
                case "Feb":
                    monthnum=2;
                    break;
                case "Mar":
                    monthnum=3;
                    break;
                case "Apr":
                    monthnum=4;
                    break;
                case "May":
                    monthnum=5;
                    break;
                case "Jun":
                    monthnum=6;
                    break;
                case "Jul":
                    monthnum=7;
                    break;
                case "Aug":
                    monthnum=8;
                    break;
                case "Sep":
                    monthnum=9;
                    break;
                case "Oct":
                    monthnum=10;
                    break;
                case "Nov":
                    monthnum=11;
                    break;
                case "Dec":
                    monthnum=12;
                    break;
            }
            getSucceed=1;      
        }
    } else {getSucceed=0;}
}
if stime=="" {getSucceed=0;}
alarm[0]=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if getSucceed==1 {
    if global.language==1 {
        draw_text(430,240,"       Unlimited");
    }
    if global.language==2 {
        draw_text(430,240,"       無限期");
    }
    if global.language==3 {
        draw_text(430,240,"       无限期");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
